name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["develop", "release/**", "main"]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  JAVA_VERSION: "17"
  APP_DIR: "."   # cambia si tu pom.xml vive en otra ruta (p.ej. Backend/Java/ms-voucher)

jobs:
  build-test:
    name: Build & Test (Maven)
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          cache: maven
      - name: Ensure mvnw is executable
        run: if [ -f "${{ env.APP_DIR }}/mvnw" ]; then chmod +x "${{ env.APP_DIR }}/mvnw"; fi
      - name: Build & Unit Tests
        working-directory: ${{ env.APP_DIR }}
        run: |
          if [ -f "./mvnw" ]; then
            ./mvnw -B -ntp clean verify
          else
            mvn -B -ntp clean verify
          fi
      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: ${{ env.APP_DIR }}/target/*.jar
          if-no-files-found: error
          retention-days: 7
      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            ${{ env.APP_DIR }}/target/surefire-reports/**
            ${{ env.APP_DIR }}/target/failsafe-reports/**
          retention-days: 7

  dependency-review:
    name: Dependency Review (PR)
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high
          comment-summary-in-pr: true

  gitleaks:
    name: Secret Scan (Gitleaks)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: gitleaks/gitleaks-action@v2
        with:
          args: --verbose --redact --exit-code 1

  owasp-depcheck:
    name: OWASP Dependency-Check (SCA)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - uses: dependency-check/Dependency-Check_Action@v4
        with:
          project: "${{ github.repository }}"
          path: ${{ env.APP_DIR }}
          format: "HTML"
          out: "depcheck"
          args: "--failOnCVSS 7"
      - name: Upload DepCheck report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-depcheck
          path: depcheck/**

  spotbugs:
    name: SpotBugs (SAST ligero)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: ${{ env.JAVA_VERSION }}, cache: maven }
      - name: SpotBugs report (audit)
        working-directory: ${{ env.APP_DIR }}
        run: |
          mvn -B com.github.spotbugs:spotbugs-maven-plugin:4.8.6.4:spotbugs || true
      - name: Upload SpotBugs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: quality-spotbugs
          path: |
            ${{ env.APP_DIR }}/target/spotbugsXml.xml
            ${{ env.APP_DIR }}/target/spotbugs.html

  pmd-checkstyle:
    name: PMD & Checkstyle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: ${{ env.JAVA_VERSION }}, cache: maven }
      - name: PMD (audit)
        working-directory: ${{ env.APP_DIR }}
        run: mvn -B org.apache.maven.plugins:maven-pmd-plugin:3.21.2:pmd || true
      - name: Checkstyle (audit - Google)
        working-directory: ${{ env.APP_DIR }}
        run: mvn -B org.apache.maven.plugins:maven-checkstyle-plugin:3.3.1:checkstyle -Dcheckstyle.configLocation=google_checks.xml || true
      - name: Upload PMD/Checkstyle
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: quality-pmd-checkstyle
          path: |
            ${{ env.APP_DIR }}/target/site/pmd.html
            ${{ env.APP_DIR }}/target/site/checkstyle.html
            ${{ env.APP_DIR }}/target/pmd.xml
            ${{ env.APP_DIR }}/target/checkstyle-result.xml

  jacoco:
    name: JaCoCo coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: ${{ env.JAVA_VERSION }}, cache: maven }
      - name: Generate coverage (audit)
        working-directory: ${{ env.APP_DIR }}
        run: |
          mvn -B org.jacoco:jacoco-maven-plugin:0.8.11:prepare-agent test org.jacoco:jacoco-maven-plugin:0.8.11:report || true
      - name: Upload JaCoCo report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-jacoco
          path: ${{ env.APP_DIR }}/target/site/jacoco/**
